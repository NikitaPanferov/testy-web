/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotAuthenticatedImport } from './routes/_notAuthenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'

// Create Virtual Routes

const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const NotAuthenticatedSignupLazyImport = createFileRoute(
  '/_notAuthenticated/signup',
)()
const NotAuthenticatedLoginLazyImport = createFileRoute(
  '/_notAuthenticated/login',
)()
const AuthenticatedTestIndexLazyImport = createFileRoute(
  '/_authenticated/test/',
)()
const AuthenticatedTestTestIdIndexLazyImport = createFileRoute(
  '/_authenticated/test/$testId/',
)()
const AuthenticatedTestTestIdEditLazyImport = createFileRoute(
  '/_authenticated/test/$testId/edit',
)()

// Create/Update Routes

const NotAuthenticatedRoute = NotAuthenticatedImport.update({
  id: '/_notAuthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const NotAuthenticatedSignupLazyRoute = NotAuthenticatedSignupLazyImport.update(
  {
    path: '/signup',
    getParentRoute: () => NotAuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_notAuthenticated/signup.lazy').then((d) => d.Route),
)

const NotAuthenticatedLoginLazyRoute = NotAuthenticatedLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => NotAuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_notAuthenticated/login.lazy').then((d) => d.Route),
)

const AuthenticatedTestIndexLazyRoute = AuthenticatedTestIndexLazyImport.update(
  {
    path: '/test/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/test/index.lazy').then((d) => d.Route),
)

const AuthenticatedTestTestIdIndexLazyRoute =
  AuthenticatedTestTestIdIndexLazyImport.update({
    path: '/test/$testId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/test/$testId/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedTestTestIdEditLazyRoute =
  AuthenticatedTestTestIdEditLazyImport.update({
    path: '/test/$testId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/test/$testId/edit.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_notAuthenticated': {
      preLoaderRoute: typeof NotAuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_notAuthenticated/login': {
      preLoaderRoute: typeof NotAuthenticatedLoginLazyImport
      parentRoute: typeof NotAuthenticatedImport
    }
    '/_notAuthenticated/signup': {
      preLoaderRoute: typeof NotAuthenticatedSignupLazyImport
      parentRoute: typeof NotAuthenticatedImport
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/test/': {
      preLoaderRoute: typeof AuthenticatedTestIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/test/$testId/edit': {
      preLoaderRoute: typeof AuthenticatedTestTestIdEditLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/test/$testId/': {
      preLoaderRoute: typeof AuthenticatedTestTestIdIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedIndexLazyRoute,
    AuthenticatedTestIndexLazyRoute,
    AuthenticatedTestTestIdEditLazyRoute,
    AuthenticatedTestTestIdIndexLazyRoute,
  ]),
  NotAuthenticatedRoute.addChildren([
    NotAuthenticatedLoginLazyRoute,
    NotAuthenticatedSignupLazyRoute,
  ]),
])

/* prettier-ignore-end */
